# Execution begins at address 0
	.pos 0
init:	irmovl Stack, %esp  	# Set up Stack pointer
	irmovl Stack, %ebp  	# Set up base pointer
	jmp Main		# Execute main program

# Sample linked list
.align 4
ele1:	
	.long 0x00a
	.long ele2
ele2:	
	.long 0x0b0
	.long ele3
ele3:	
	.long 0xc00
	.long 0


Main:	irmovl 	ele1,%eax
	pushl 	%eax      		# Push ele1
	call 	rsum_list		# rsum_list(ele1)
	halt

/* $begin sum-ys 0 */
	# int rsum_list(int *list)
rsum_list:	
	pushl 	%ebp
	rrmovl 	%esp,%ebp
	pushl	%esi			# save register %esi
	mrmovl 	8(%ebp),%edx 		# %edx = ele1
	irmovl 	$0, %eax		# #eax = sum = 0
	andl   	%edx,%edx		# if ele = 0,return 0
	je     	End
	mrmovl 	(%edx),%esi      	# %esi = *list
	mrmovl 	4(%edx),%edx 		# %edx = list.next
	pushl	%edx			# Push ele
	call 	rsum_list		# rsum_list(ele)
	popl	%edx
	addl 	%esi,%eax          	# add to sum
End:	
	popl	%esi
	popl 	%ebp
	ret
/* $end sum-ys 0 */
	.pos 0x100
Stack:	# The stack goes here
